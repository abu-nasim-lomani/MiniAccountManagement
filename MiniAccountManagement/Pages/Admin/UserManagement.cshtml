@page
@model MiniAccountManagement.Pages.Admin.UserManagementModel
@using System.Security.Claims
@{
    ViewData["Title"] = "User Management";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@ViewData["Title"]</h1>
    <a asp-page="./CreateUser" class="btn btn-primary">
        <i class="fas fa-plus me-1"></i> Create New User
    </a>
</div>

<div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

<div class="card shadow-sm">
    <div class="card-body">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>User Email</th>
                    <th>Current Role</th>
                    <th>Status</th>
                    <th style="width: 45%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.UsersWithRoles)
                {
                    <tr>
                        <td>@user.Email</td>
                        <td><span class="badge bg-secondary">@user.CurrentRole</span></td>
                        <td>
                            @if (user.IsApproved)
                            {
                                <span class="badge bg-success">Approved</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Pending Approval</span>
                            }
                        </td>
                        <td>
                            <div class="d-flex align-items-center flex-wrap">
                                <form method="post" asp-page-handler="UpdateRole" class="d-flex align-items-center me-2 mb-1">
                                    <input type="hidden" name="userId" value="@user.UserId" />
                                    <div class="input-group input-group-sm">

                                        <select name="newRole" asp-for="@user.NewRole" asp-items="@user.RoleOptions" class="form-select"></select>

                                        <button type="submit" class="btn btn-outline-primary">Update </button>
                                    </div>
                                </form>

                                @if (!user.IsApproved)
                                {
                                    <form method="post" asp-page-handler="ApproveUser" class="me-2 mb-1">
                                        <input type="hidden" name="userId" value="@user.UserId" />
                                        <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                    </form>
                                }
                                <button type="button" class="btn btn-secondary btn-sm me-2 mb-1" data-bs-toggle="modal" data-bs-target="#changePasswordModal" data-user-id="@user.UserId" data-user-email="@user.Email">
                                    Change Password
                                </button>
                                @if (User.FindFirst(ClaimTypes.NameIdentifier)?.Value != user.UserId)
                                {
                                    <button type="button" class="btn btn-danger btn-sm mb-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteConfirmationMod al"
                                            data-user-id="@user.UserId"
                                            data-user-email="@user.Email">
                                        X
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="ChangePassword">
                <div class="modal-header"><h5 class="modal-title">Change Password</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
                <div class="modal-body">
                    <p>You are changing password for: <strong id="userEmailForPassword"></strong></p>
                    <input type="hidden" name="userId" id="userIdForPassword" />
                    <div class="mb-3">
                        <label for="newPasswordInput" class="form-label">New Password</label>
                        <input type="password" name="newPassword" id="newPasswordInput" class="form-control" required minlength="6" />
                        <small class="form-text text-muted">Password must meet complexity requirements.</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save New Password</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title" id="modalLabel">Confirm Deletion</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
            <div class="modal-body">
                <p>Are you sure you want to permanently delete the user <strong id="userEmailToDelete"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <form method="post" asp-page-handler="DeleteUser">
                    <input type="hidden" name="userId" id="userIdToDelete" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('deleteConfirmationModal');
            if(deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var userId = button.getAttribute('data-user-id');
                    var userEmail = button.getAttribute('data-user-email');

                    var modalUserEmail = deleteModal.querySelector('#userEmailToDelete');
                    var modalUserIdInput = deleteModal.querySelector('#userIdToDelete');

                    if(modalUserEmail) modalUserEmail.textContent = userEmail;
                    if(modalUserIdInput) modalUserIdInput.value = userId;
                });
            }

            var passwordModal = document.getElementById('changePasswordModal');
            if(passwordModal) {
                passwordModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var userId = button.getAttribute('data-user-id');
                    var userEmail = button.getAttribute('data-user-email');

                    var modalUserEmail = passwordModal.querySelector('#userEmailForPassword');
                    var modalUserIdInput = passwordModal.querySelector('#userIdForPassword');

                    if(modalUserEmail) modalUserEmail.textContent = userEmail;
                    if(modalUserIdInput) modalUserIdInput.value = userId;
                });
            }
        });
    </script>
}